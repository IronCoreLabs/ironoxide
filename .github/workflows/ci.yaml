name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 14 * * 1" # Mondays at 2pm UTC

jobs:
  cargo-test:
    env:
      IRONCORE_ENV: dev
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # different operating systems
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-2019]
        features: [default]
        toolchain: [stable]
        include:
          # different features combinations
          - os: ubuntu-18.04
            features: beta
          - os: ubuntu-18.04
            features: blocking
          - os: ubuntu-18.04
            features: "blocking beta"
          # different tls implementations
          - os: ubuntu-18.04
            features: tls-rustls --no-default-features
          - os: ubuntu-18.04
            features: tls-vendored-openssl --no-default-features
          - os: ubuntu-18.04
            toolchain: beta
            features: default
          # MSRV
          - os: ubuntu-18.04
            toolchain: 1.56.0
            features: default
    steps:
      - uses: actions/checkout@v3
      - if: matrix.toolchain != ''
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      # This was disabled because of intermittent failures after a cache hit in macos-10.15
      #
      # - name: Generate Cargo.lock so we can cache from it
      #   run: cargo generate-lockfile
      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: ${{ github.workflow }}-rust-${{ matrix.os }}-${{ hashFiles('**/Cargo.lock') }}
      #     restore-keys: |
      #       ${{ github.workflow }}-rust-${{ matrix.os }}-
      - name: Decrypt test keys
        run: openssl aes-256-cbc -d -K ${{ secrets.OPENSSL_KEY }} -iv ${{ secrets.OPENSSL_IV }} -in tests/testkeys/iak-dev.pem.enc -out tests/testkeys/iak-dev.pem
      # Generate the Cargo.lock that will be used for the tests so we can upload it as an artifact
      - name: Generate lockfile
        run: cargo generate-lockfile
      - name: Upload Cargo.lock
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.features }}-${{ matrix.toolchain }}-Cargo.lock
          path: Cargo.lock
      - name: Cargo test
        run: cargo test --features ${{ matrix.features }}
      - name: Post to Slack on failure of scheduled run
        if: failure() && github.event_name == 'schedule'
        run: |
          curl -L -X POST '${{ secrets.SLACK_WEBHOOK }}' \
          -F "payload={\"text\": \"Failed a run of <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|$GITHUB_REPOSITORY>.\"}"

  cargo-build:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        target:
          - aarch64-linux-android
          - armv7-linux-androideabi
          - i686-linux-android
          - x86_64-linux-android
          - x86_64-unknown-linux-musl
        os:
          - ubuntu-18.04
        include:
          - target: aarch64-apple-ios
            os: macos-10.15
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      # This was disabled because of intermittent failures after a cache hit in macos-10.15
      #
      # - name: Generate Cargo.lock so we can cache from it
      #   run: cargo generate-lockfile
      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: ${{ github.workflow }}-rust-arch-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      #     restore-keys: |
      #       ${{ github.workflow }}-rust-arch-${{ matrix.target }}-
      - uses: actions-rs/cargo@v1
        with:
          # `cross` will work on all our targets except aarch64-apple-ios. We can still use `cross` everywhere, because it transparently falls back to `cargo`.
          use-cross: true
          command: build
          args: --target ${{ matrix.target }} --features "beta blocking tls-rustls" --no-default-features
      - name: Post to Slack on failure of scheduled run
        if: failure() && github.event_name == 'schedule'
        run: |
          curl -L -X POST '${{ secrets.SLACK_WEBHOOK }}' \
          -F "payload={\"text\": \"Failed a run of <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|$GITHUB_REPOSITORY>.\"}"

  format:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-sort-ck
          version: latest
      - run: cargo fmt --all -- --check
      - run: cargo-sort-ck
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.2
